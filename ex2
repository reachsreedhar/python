#!/usr/bin/python3

x = 10
y = 10

if [ x is y ]:
  print("true")

a = [10, 20, 30]
b = [10, 20, 30]

if [ a is b ]:
  print("true")

print("a is b", a is b)
print("a == b", a == b)

print(type(None))

a = None

def my_func():
  print ("a is None", a is None)

my_func()
print(type(my_func))
print(type(my_func()))


a = 10
print(type(a))

b = int(10)
print(type(a))

#help(int)

c = int('101', base=2)
print (c)

def square(a):
  return a ** 2

print(type(square))

f = square
print(id(f))
print(f(2))

def cube(a):
  return a ** 3

def exec_function(fn, n):
  return fn(n)

print(exec_function(square, 10))
print(exec_function(cube, 10))

a = 10
b = 10
print(id(a))
print(id(b))

a = -5
b = -5
print(id(a))
print(id(b))

a = 100057
b = 100057
print(id(a))
print(id(b))

import sys
a = sys.intern('the quick brown box')
b = sys.intern('the quick brown box')
print ('a is b', a is b)

a = 'hello'
b = 'hello'
print(id(a), id(b))

a = 'hello sreedhar'
b = 'hello sreedhar'
print(id(a), id(b))

def compare_using_equals(n):
  a = 'a long string that is not interned' * 200
  b = 'a long string that is not interned' * 200
  for i in range(n):
    if a == b:
      pass

def compare_using_interning(n):
  a = sys.intern('a long string that is not interned' * 200)
  b = sys.intern('a long string that is not interned' * 200)
  for i in range(n):
    if a is b:
      pass

import time

start = time.perf_counter()
compare_using_equals(10000000)
end = time.perf_counter()
print('equality', end-start)

start = time.perf_counter()
compare_using_interning(10000000)
end = time.perf_counter()
print('interning', end-start)
